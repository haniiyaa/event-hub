# Event Hub API Testing Guide
# Use this with REST Client extension in VS Code or copy to Postman

### Base URL
@baseUrl = http://localhost:8080

### =============================================
### 1. AUTHENTICATION TESTING
### =============================================

### 1.1 Register a Super Admin
POST {{baseUrl}}/api/auth/register
Content-Type: application/json

{
  "username": "admin",
  "password": "admin123",
  "email": "admin@college.edu",
  "fullName": "Super Administrator",
  "phoneNumber": "+1-555-0100",
  "classDetails": "Administration"
}

### 1.2 Register a Student (Future Club Admin)
POST {{baseUrl}}/api/auth/register
Content-Type: application/json

{
  "username": "student1",
  "password": "pass123",
  "email": "student1@college.edu",
  "fullName": "John Doe",
  "phoneNumber": "+1-555-0101",
  "classDetails": "Computer Science - Class of 2026"
}

### 1.3 Register Another Student
POST {{baseUrl}}/api/auth/register
Content-Type: application/json

{
  "username": "student2",
  "password": "pass123",
  "email": "student2@college.edu",
  "fullName": "Jane Smith",
  "phoneNumber": "+1-555-0102",
  "classDetails": "Information Systems - Class of 2027"
}

### 1.4 Login as Admin
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "username": "admin",
  "password": "admin123"
}

### 1.5 Get Current User Info (Test Authentication)
GET {{baseUrl}}/api/auth/me
Authorization: Basic admin:admin123

### =============================================
### 2. SUPER ADMIN OPERATIONS
### =============================================

### 2.1 View All Users (Admin Only)
GET {{baseUrl}}/api/admin/users
Authorization: Basic admin:admin123

### 2.2 Promote Student to Club Admin (Replace {userId} with actual ID from step 2.1)
POST {{baseUrl}}/api/admin/promote-club-admin/2
Authorization: Basic admin:admin123

### 2.3 Change User Role Manually (Alternative method)
PUT {{baseUrl}}/api/admin/users/2/role
Authorization: Basic admin:admin123
Content-Type: application/json

{
  "role": "CLUB_ADMIN"
}

### =============================================
### 3. CLUB ADMIN OPERATIONS
### =============================================

### 3.1 Login as Club Admin
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "username": "student1",
  "password": "pass123"
}

### 3.2 Create a Club (Club Admin Only - One per admin)
POST {{baseUrl}}/api/club-admin/club
Authorization: Basic student1:pass123
Content-Type: application/json

{
  "name": "Tech Club",
  "description": "A club for technology enthusiasts and programmers"
}

### 3.3 Try to Create Another Club (Should Fail)
POST {{baseUrl}}/api/club-admin/club
Authorization: Basic student1:pass123
Content-Type: application/json

{
  "name": "Science Club",
  "description": "Another club - should fail"
}

### 3.4 Get My Club
GET {{baseUrl}}/api/club-admin/club
Authorization: Basic student1:pass123

### 3.5 Create Event in My Club
POST {{baseUrl}}/api/club-admin/events
Authorization: Basic student1:pass123
Content-Type: application/json

{
  "title": "Java Workshop",
  "description": "Learn Spring Boot development",
  "eventDate": "2025-10-15T14:00:00",
  "location": "Computer Lab A",
  "capacity": 30
}

### 3.6 Create Another Event
POST {{baseUrl}}/api/club-admin/events
Authorization: Basic student1:pass123
Content-Type: application/json

{
  "title": "Python Bootcamp",
  "description": "Introduction to Python programming",
  "eventDate": "2025-10-20T10:00:00",
  "location": "Auditorium B",
  "capacity": 50
}

### 3.7 Get All My Events
GET {{baseUrl}}/api/club-admin/events
Authorization: Basic student1:pass123

### 3.8 Update Event Capacity (Replace {eventId} with actual ID)
PUT {{baseUrl}}/api/club-admin/events/1/capacity
Authorization: Basic student1:pass123
Content-Type: application/json

{
  "capacity": 40
}

### 3.9 Get Event Statistics (Replace {eventId} with actual ID)
GET {{baseUrl}}/api/club-admin/events/1/stats
Authorization: Basic student1:pass123

### 3.10 Create Instruction for Event (Replace {eventId} with actual ID)
POST {{baseUrl}}/api/club-admin/events/1/instructions
Authorization: Basic student1:pass123
Content-Type: application/json

{
  "title": "Pre-Workshop Requirements",
  "content": "Please bring your laptop with Java 11+ installed. We'll cover Spring Boot basics.",
  "isImportant": true
}

### 3.11 Get Club Admin Dashboard
GET {{baseUrl}}/api/club-admin/dashboard
Authorization: Basic student1:pass123

### =============================================
### 4. SECURITY TESTING
### =============================================

### 4.1 Try to Access Club Admin Endpoint as Student (Should Fail)
GET {{baseUrl}}/api/club-admin/club
Authorization: Basic student2:pass123

### 4.2 Try to Access Admin Endpoint as Club Admin (Should Fail)
GET {{baseUrl}}/api/admin/users
Authorization: Basic student1:pass123

### 4.3 Try to Access Without Authentication (Should Fail)
GET {{baseUrl}}/api/club-admin/dashboard

### =============================================
### 5. ERROR TESTING
### =============================================

### 5.1 Try to Register with Existing Username
POST {{baseUrl}}/api/auth/register
Content-Type: application/json

{
  "username": "admin",
  "password": "newpass",
  "email": "newemail@test.com",
  "fullName": "New User",
  "phoneNumber": "+1-555-0199",
  "classDetails": "Test Case"
}

### 5.2 Try Invalid Login
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "username": "admin",
  "password": "wrongpassword"
}

### 5.3 Try to Update Non-existent Event Capacity
PUT {{baseUrl}}/api/club-admin/events/999/capacity
Authorization: Basic student1:pass123
Content-Type: application/json

{
  "capacity": 100
}

### =============================================
### 6. ADVANCED TESTING SCENARIOS
### =============================================

### 6.1 Create Multiple Events and Test Pagination
POST {{baseUrl}}/api/club-admin/events
Authorization: Basic student1:pass123
Content-Type: application/json

{
  "title": "React Workshop",
  "description": "Frontend development with React",
  "eventDate": "2025-11-01T15:30:00",
  "location": "Lab C",
  "capacity": 25
}

### 6.2 Test Event with Past Date
POST {{baseUrl}}/api/club-admin/events
Authorization: Basic student1:pass123
Content-Type: application/json

{
  "title": "Past Event",
  "description": "This should work but might need validation",
  "eventDate": "2025-09-01T10:00:00",
  "location": "Hall A",
  "capacity": 20
}

### 6.3 Test Capacity Reduction Below Current Registrations
# First check current registrations in event stats, then try to reduce below that number
PUT {{baseUrl}}/api/club-admin/events/1/capacity
Authorization: Basic student1:pass123
Content-Type: application/json

{
  "capacity": 5
}